-- ========================================
-- Script SQL para Oracle SQL Developer
-- Modelo de GestiÃ³n de un Hotel
-- ========================================

-- ================================
-- Tabla: HABITACION
-- ================================
CREATE TABLE HABITACION (
    id_habitacion      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    numero             VARCHAR2(10) NOT NULL UNIQUE,
    tipo               VARCHAR2(50) NOT NULL,
    precio_por_noche   NUMBER(10,2) NOT NULL CHECK (precio_por_noche > 0),
    estado             VARCHAR2(20) CHECK (estado IN ('disponible','ocupada','limpieza','mantenimiento'))
);

-- ================================
-- Tabla: CLIENTE
-- ================================
CREATE TABLE CLIENTE (
    id_cliente     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre         VARCHAR2(100) NOT NULL,
    apellido       VARCHAR2(100) NOT NULL,
    dni_pasaporte  VARCHAR2(50) UNIQUE NOT NULL,
    telefono       VARCHAR2(20),
    email          VARCHAR2(100),
    direccion      VARCHAR2(200)
);

-- ================================
-- Tabla: RESERVA
-- ================================
CREATE TABLE RESERVA (
    id_reserva     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_cliente     NUMBER NOT NULL,
    id_habitacion  NUMBER NOT NULL,
    fecha_inicio   DATE NOT NULL,
    fecha_fin      DATE NOT NULL,
    estado         VARCHAR2(20) CHECK (estado IN ('pendiente','confirmada','cancelada','finalizada')),
    CONSTRAINT fk_reserva_cliente FOREIGN KEY (id_cliente) REFERENCES CLIENTE(id_cliente),
    CONSTRAINT fk_reserva_habitacion FOREIGN KEY (id_habitacion) REFERENCES HABITACION(id_habitacion),
    CONSTRAINT ck_fechas CHECK (fecha_fin > fecha_inicio)
);

-- ================================
-- Tabla: PAGO
-- ================================
CREATE TABLE PAGO (
    id_pago        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_reserva     NUMBER NOT NULL,
    monto          NUMBER(10,2) NOT NULL CHECK (monto > 0),
    fecha_pago     DATE,
    metodo_pago    VARCHAR2(50),
    estado         VARCHAR2(20) CHECK (estado IN ('pendiente','pagado','reembolsado')),
    CONSTRAINT fk_pago_reserva FOREIGN KEY (id_reserva) REFERENCES RESERVA(id_reserva)
);

-- ================================
-- Tabla: EMPLEADO
-- ================================
CREATE TABLE EMPLEADO (
    id_empleado    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre         VARCHAR2(100) NOT NULL,
    apellido       VARCHAR2(100) NOT NULL,
    cargo          VARCHAR2(50),
    telefono       VARCHAR2(20),
    email          VARCHAR2(100)
);

-- ================================
-- Tabla: SERVICIO
-- ================================
CREATE TABLE SERVICIO (
    id_servicio       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_servicio   VARCHAR2(100) NOT NULL,
    descripcion       VARCHAR2(200),
    precio            NUMBER(10,2) NOT NULL CHECK (precio > 0)
);

-- ================================
-- Tabla: CONSUMO_SERVICIO
-- ================================
CREATE TABLE CONSUMO_SERVICIO (
    id_consumo     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_reserva     NUMBER NOT NULL,
    id_servicio    NUMBER NOT NULL,
    cantidad       NUMBER NOT NULL CHECK (cantidad > 0),
    total          NUMBER(10,2) NOT NULL CHECK (total > 0),
    CONSTRAINT fk_consumo_reserva FOREIGN KEY (id_reserva) REFERENCES RESERVA(id_reserva),
    CONSTRAINT fk_consumo_servicio FOREIGN KEY (id_servicio) REFERENCES SERVICIO(id_servicio)
);
